{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///sanji-exception-ui.js","webpack:///webpack/bootstrap 12787f842445cf3d8707","webpack:///./component/index.js","webpack:///./component/index.js?3f52","webpack:///./component/exception-handler.config.js","webpack:///./component/exception-handler.config.js?2ede","webpack:///./component/exception-handler.provider.js","webpack:///./component/exception-handler.provider.js?dc19","webpack:///./component/exception.service.js","webpack:///./component/exception.service.js?6907","webpack:///external {\"root\":\"angular\",\"commonjs2\":\"angular\",\"commonjs\":\"angular\",\"amd\":\"angular\"}","webpack:///external {\"root\":\"sjLogger\",\"commonjs2\":\"sanji-logger-ui\",\"commonjs\":\"sanji-logger-ui\",\"amd\":\"sanji-logger-ui\"}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_angular","_angular2","_sanjiLoggerUi","_sanjiLoggerUi2","_exceptionHandlerConfig","_exceptionHandlerConfig2","_exceptionHandlerProvider","_exceptionHandlerProvider2","_exceptionService","_exceptionService2","app","config","provider","service","name","$provide","extendExceptionHandler","$delegate","exceptionHandler","logger","exception","cause","appErrorPrefix","errorData","message","error","decorator","$inject","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","ExceptionHandlerProvider","_this","_len","arguments","injects","Array","_key","forEach","item","index","undefined","configure","ExceptionService","$q","e","thrownDescription","newMessage","data","reject"],"mappings":"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","file":"sanji-exception-ui.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"sanji-logger-ui\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"sanji-logger-ui\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"sjException\"] = factory(require(\"angular\"), require(\"sanji-logger-ui\"));\n\telse\n\t\troot[\"sjException\"] = factory(root[\"angular\"], root[\"sjLogger\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"sanji-logger-ui\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"sanji-logger-ui\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"sjException\"] = factory(require(\"angular\"), require(\"sanji-logger-ui\"));\n\telse\n\t\troot[\"sjException\"] = factory(root[\"angular\"], root[\"sjLogger\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _angular = __webpack_require__(4);\n\t\n\tvar _angular2 = _interopRequireDefault(_angular);\n\t\n\tvar _sanjiLoggerUi = __webpack_require__(5);\n\t\n\tvar _sanjiLoggerUi2 = _interopRequireDefault(_sanjiLoggerUi);\n\t\n\tvar _exceptionHandlerConfig = __webpack_require__(1);\n\t\n\tvar _exceptionHandlerConfig2 = _interopRequireDefault(_exceptionHandlerConfig);\n\t\n\tvar _exceptionHandlerProvider = __webpack_require__(2);\n\t\n\tvar _exceptionHandlerProvider2 = _interopRequireDefault(_exceptionHandlerProvider);\n\t\n\tvar _exceptionService = __webpack_require__(3);\n\t\n\tvar _exceptionService2 = _interopRequireDefault(_exceptionService);\n\t\n\tvar app = _angular2['default'].module('sanji.exception', [_sanjiLoggerUi2['default']]);\n\tapp.config(_exceptionHandlerConfig2['default']);\n\tapp.provider('exceptionHandler', _exceptionHandlerProvider2['default']);\n\tapp.service('exception', _exceptionService2['default']);\n\texports['default'] = app = app.name;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\texports['default'] = [\"$provide\", function ($provide) {\n\t  'ngInject';\n\t  $provide.decorator('$exceptionHandler', extendExceptionHandler);\n\t  extendExceptionHandler.$inject = ['$delegate', 'exceptionHandler', 'logger'];\n\t\n\t  /**\n\t   * Extend the $exceptionHandler service to also display a toast.\n\t   * @param  {Object} $delegate\n\t   * @param  {Object} exceptionHandler\n\t   * @param  {Object} logger\n\t   * @return {Function} the decorated $exceptionHandler service\n\t   */\n\t  function extendExceptionHandler($delegate, exceptionHandler, logger) {\n\t    return function (exception, cause) {\n\t      var appErrorPrefix = exceptionHandler.config.appErrorPrefix || '';\n\t      var errorData = { exception: exception, cause: cause };\n\t      exception.message = appErrorPrefix + exception.message;\n\t      $delegate(exception, cause);\n\t      /**\n\t       * Could add the error to a service's collection,\n\t       * add errors to $rootScope, log errors to remote web server,\n\t       * or log locally. Or throw hard. It is entirely up to you.\n\t       * throw exception;\n\t       *\n\t       * @example\n\t       *     throw { message: 'error message we added' };\n\t       */\n\t      logger.error(exception.message, errorData);\n\t    };\n\t  }\n\t}];\n\t\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar $inject = [];\n\t\n\tvar ExceptionHandlerProvider = (function () {\n\t  function ExceptionHandlerProvider() {\n\t    var _this = this;\n\t\n\t    for (var _len = arguments.length, injects = Array(_len), _key = 0; _key < _len; _key++) {\n\t      injects[_key] = arguments[_key];\n\t    }\n\t\n\t    _classCallCheck(this, ExceptionHandlerProvider);\n\t\n\t    ExceptionHandlerProvider.$inject.forEach(function (item, index) {\n\t      return _this[item] = injects[index];\n\t    });\n\t\n\t    this.config = {\n\t      appErrorPrefix: undefined\n\t    };\n\t\n\t    this.configure = function (appErrorPrefix) {\n\t      _this.config.appErrorPrefix = appErrorPrefix;\n\t    };\n\t  }\n\t\n\t  _createClass(ExceptionHandlerProvider, [{\n\t    key: '$get',\n\t    value: function $get() {\n\t      'ngInject';\n\t      var config = this.config;\n\t\n\t      return {\n\t        config: config\n\t      };\n\t    }\n\t  }]);\n\t\n\t  return ExceptionHandlerProvider;\n\t})();\n\t\n\tExceptionHandlerProvider.$inject = $inject;\n\texports['default'] = ExceptionHandlerProvider;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar $inject = ['$q', 'logger'];\n\t\n\tvar ExceptionService = (function () {\n\t  function ExceptionService() {\n\t    var _this = this;\n\t\n\t    for (var _len = arguments.length, injects = Array(_len), _key = 0; _key < _len; _key++) {\n\t      injects[_key] = arguments[_key];\n\t    }\n\t\n\t    _classCallCheck(this, ExceptionService);\n\t\n\t    ExceptionService.$inject.forEach(function (item, index) {\n\t      return _this[item] = injects[index];\n\t    });\n\t  }\n\t\n\t  _createClass(ExceptionService, [{\n\t    key: 'catcher',\n\t    value: function catcher(message) {\n\t      var $q = this.$q;\n\t      var logger = this.logger;\n\t\n\t      return function (e) {\n\t        var thrownDescription = undefined;\n\t        var newMessage = undefined;\n\t        if ('object' === typeof e && e.data && e.data.message) {\n\t          // handling like http request error\n\t          thrownDescription = '\\n' + e.data.message;\n\t          newMessage = message + thrownDescription;\n\t          logger.error(newMessage, e);\n\t          return $q.reject(e);\n\t        } else {\n\t          logger.error(message, e);\n\t        }\n\t      };\n\t    }\n\t  }]);\n\t\n\t  return ExceptionService;\n\t})();\n\t\n\tExceptionService.$inject = $inject;\n\texports['default'] = ExceptionService;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** sanji-exception-ui.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 12787f842445cf3d8707\n **/","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _angular = require('angular');\n\nvar _angular2 = _interopRequireDefault(_angular);\n\nvar _sanjiLoggerUi = require('sanji-logger-ui');\n\nvar _sanjiLoggerUi2 = _interopRequireDefault(_sanjiLoggerUi);\n\nvar _exceptionHandlerConfig = require('./exception-handler.config');\n\nvar _exceptionHandlerConfig2 = _interopRequireDefault(_exceptionHandlerConfig);\n\nvar _exceptionHandlerProvider = require('./exception-handler.provider');\n\nvar _exceptionHandlerProvider2 = _interopRequireDefault(_exceptionHandlerProvider);\n\nvar _exceptionService = require('./exception.service');\n\nvar _exceptionService2 = _interopRequireDefault(_exceptionService);\n\nvar app = _angular2['default'].module('sanji.exception', [_sanjiLoggerUi2['default']]);\napp.config(_exceptionHandlerConfig2['default']);\napp.provider('exceptionHandler', _exceptionHandlerProvider2['default']);\napp.service('exception', _exceptionService2['default']);\nexports['default'] = app = app.name;\nmodule.exports = exports['default'];\n\n\n/** WEBPACK FOOTER **\n ** ./component/index.js\n **/","import angular from 'angular';\nimport sjLogger from 'sanji-logger-ui';\n\nimport config from './exception-handler.config';\nimport ExceptionHandlerProvider from './exception-handler.provider';\nimport ExceptionService from './exception.service';\n\nlet app = angular.module('sanji.exception', [sjLogger]);\napp.config(config);\napp.provider('exceptionHandler', ExceptionHandlerProvider);\napp.service('exception', ExceptionService);\nexport default app = app.name\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/eslint-loader!./component/index.js\n **/","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function ($provide) {\n  'ngInject';\n  $provide.decorator('$exceptionHandler', extendExceptionHandler);\n  extendExceptionHandler.$inject = ['$delegate', 'exceptionHandler', 'logger'];\n\n  /**\n   * Extend the $exceptionHandler service to also display a toast.\n   * @param  {Object} $delegate\n   * @param  {Object} exceptionHandler\n   * @param  {Object} logger\n   * @return {Function} the decorated $exceptionHandler service\n   */\n  function extendExceptionHandler($delegate, exceptionHandler, logger) {\n    return function (exception, cause) {\n      var appErrorPrefix = exceptionHandler.config.appErrorPrefix || '';\n      var errorData = { exception: exception, cause: cause };\n      exception.message = appErrorPrefix + exception.message;\n      $delegate(exception, cause);\n      /**\n       * Could add the error to a service's collection,\n       * add errors to $rootScope, log errors to remote web server,\n       * or log locally. Or throw hard. It is entirely up to you.\n       * throw exception;\n       *\n       * @example\n       *     throw { message: 'error message we added' };\n       */\n      logger.error(exception.message, errorData);\n    };\n  }\n};\n\nmodule.exports = exports['default'];\n\n\n/** WEBPACK FOOTER **\n ** ./component/exception-handler.config.js\n **/","export default ($provide) => {\n  'ngInject';\n  $provide.decorator('$exceptionHandler', extendExceptionHandler);\n  extendExceptionHandler.$inject = ['$delegate', 'exceptionHandler', 'logger'];\n\n  /**\n   * Extend the $exceptionHandler service to also display a toast.\n   * @param  {Object} $delegate\n   * @param  {Object} exceptionHandler\n   * @param  {Object} logger\n   * @return {Function} the decorated $exceptionHandler service\n   */\n  function extendExceptionHandler($delegate, exceptionHandler, logger) {\n    return function(exception, cause) {\n      let appErrorPrefix = exceptionHandler.config.appErrorPrefix || '';\n      let errorData = {exception: exception, cause: cause};\n      exception.message = appErrorPrefix + exception.message;\n      $delegate(exception, cause);\n      /**\n       * Could add the error to a service's collection,\n       * add errors to $rootScope, log errors to remote web server,\n       * or log locally. Or throw hard. It is entirely up to you.\n       * throw exception;\n       *\n       * @example\n       *     throw { message: 'error message we added' };\n       */\n      logger.error(exception.message, errorData);\n    };\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/eslint-loader!./component/exception-handler.config.js\n **/","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar $inject = [];\n\nvar ExceptionHandlerProvider = (function () {\n  function ExceptionHandlerProvider() {\n    var _this = this;\n\n    for (var _len = arguments.length, injects = Array(_len), _key = 0; _key < _len; _key++) {\n      injects[_key] = arguments[_key];\n    }\n\n    _classCallCheck(this, ExceptionHandlerProvider);\n\n    ExceptionHandlerProvider.$inject.forEach(function (item, index) {\n      return _this[item] = injects[index];\n    });\n\n    this.config = {\n      appErrorPrefix: undefined\n    };\n\n    this.configure = function (appErrorPrefix) {\n      _this.config.appErrorPrefix = appErrorPrefix;\n    };\n  }\n\n  _createClass(ExceptionHandlerProvider, [{\n    key: '$get',\n    value: function $get() {\n      'ngInject';\n      var config = this.config;\n\n      return {\n        config: config\n      };\n    }\n  }]);\n\n  return ExceptionHandlerProvider;\n})();\n\nExceptionHandlerProvider.$inject = $inject;\nexports['default'] = ExceptionHandlerProvider;\nmodule.exports = exports['default'];\n\n\n/** WEBPACK FOOTER **\n ** ./component/exception-handler.provider.js\n **/","const $inject = [];\nclass ExceptionHandlerProvider {\n  constructor(...injects) {\n    ExceptionHandlerProvider.$inject.forEach((item, index) => this[item] = injects[index]);\n\n    this.config = {\n      appErrorPrefix: undefined\n    };\n\n    this.configure = appErrorPrefix => {\n      this.config.appErrorPrefix = appErrorPrefix;\n    };\n  }\n\n  $get() {\n    'ngInject';\n    let config = this.config;\n\n    return {\n      config: config\n    };\n  }\n}\n\nExceptionHandlerProvider.$inject = $inject;\nexport default ExceptionHandlerProvider;\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/eslint-loader!./component/exception-handler.provider.js\n **/","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar $inject = ['$q', 'logger'];\n\nvar ExceptionService = (function () {\n  function ExceptionService() {\n    var _this = this;\n\n    for (var _len = arguments.length, injects = Array(_len), _key = 0; _key < _len; _key++) {\n      injects[_key] = arguments[_key];\n    }\n\n    _classCallCheck(this, ExceptionService);\n\n    ExceptionService.$inject.forEach(function (item, index) {\n      return _this[item] = injects[index];\n    });\n  }\n\n  _createClass(ExceptionService, [{\n    key: 'catcher',\n    value: function catcher(message) {\n      var $q = this.$q;\n      var logger = this.logger;\n\n      return function (e) {\n        var thrownDescription = undefined;\n        var newMessage = undefined;\n        if ('object' === typeof e && e.data && e.data.message) {\n          // handling like http request error\n          thrownDescription = '\\n' + e.data.message;\n          newMessage = message + thrownDescription;\n          logger.error(newMessage, e);\n          return $q.reject(e);\n        } else {\n          logger.error(message, e);\n        }\n      };\n    }\n  }]);\n\n  return ExceptionService;\n})();\n\nExceptionService.$inject = $inject;\nexports['default'] = ExceptionService;\nmodule.exports = exports['default'];\n\n\n/** WEBPACK FOOTER **\n ** ./component/exception.service.js\n **/","const $inject = ['$q', 'logger'];\nclass ExceptionService {\n  constructor(...injects) {\n    ExceptionService.$inject.forEach((item, index) => this[item] = injects[index]);\n  }\n\n  catcher(message) {\n    let $q = this.$q;\n    let logger = this.logger;\n\n    return function(e) {\n      let thrownDescription;\n      let newMessage;\n      if ('object' === typeof e && e.data && e.data.message) { // handling like http request error\n        thrownDescription = '\\n' + e.data.message;\n        newMessage = message + thrownDescription;\n        logger.error(newMessage, e);\n        return $q.reject(e);\n      }\n      else {\n        logger.error(message, e);\n      }\n    };\n  }\n}\n\nExceptionService.$inject = $inject;\nexport default ExceptionService;\n\n\n\n/** WEBPACK FOOTER **\n ** ../~/eslint-loader!./component/exception.service.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"angular\",\"commonjs2\":\"angular\",\"commonjs\":\"angular\",\"amd\":\"angular\"}\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"sjLogger\",\"commonjs2\":\"sanji-logger-ui\",\"commonjs\":\"sanji-logger-ui\",\"amd\":\"sanji-logger-ui\"}\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}
